===================
JSON body (object)
===================

PUT https://reqres.in/api/users/2
Content-Type: application/json

{
    "name": "morpheus",
    "job": "zion resident"
}

---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)
        (identifier)
        (identifier)))
    (header
      name: (name)
      value: (value))
    (json_body)))


===================
JSON body (array)
===================

PUT https://reqres.in/api/users/2
Content-Type: application/json

[
    {
        "name": "morpheus",
        "job": "zion resident"
    }
]

---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)
        (identifier)
        (identifier)))
    (header
      name: (name)
      value: (value))
    (json_body)))


=========
XML body
=========

POST https://example.com/comments HTTP/1.1
Content-Type: application/xml
Accept: application/xml

<?xml version="1.0" encoding="utf-8"?>
<Request>
  <Login>login</Login>
  <Password>password</Password>
</Request>

---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)))
    (http_version)
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (xml_body)))


=============
GraphQL body query
=============

POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer xxx
X-REQUEST-TYPE: GraphQL

query ($name: String!, $owner: String!) {
  repository(name: $name, owner: $owner) {
    name
    fullName: nameWithOwner
    description
    diskUsage
    forkCount
    stargazers(first: 5) {
        totalCount
        nodes {
            login
            name
        }
    }
    watchers {
        totalCount
    }
  }
}

{
    "name": "vscode-restclient",
    "owner": "Huachao"
}

---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)))
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (graphql_body)
    (json_body)))

=============
GraphQL body mutation with identifier
=============

POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer xxx
X-REQUEST-TYPE: GraphQL

mutation CreateRepository($name: String!, $owner: String!) {
  repository(name: $name, owner: $owner) {
    name
    fullName: nameWithOwner
    description
    diskUsage
    forkCount
    stargazers(first: 5) {
        totalCount
        nodes {
            login
            name
        }
    }
    watchers {
        totalCount
    }
  }
}

{
    "name": "vscode-restclient",
    "owner": "Huachao"
}


---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)))
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (graphql_body
      (identifier))
    (json_body)))

=============
GraphQL body without args
=============

POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer xxx
X-REQUEST-TYPE: GraphQL

query Foo {
  repository {
    name
  }
}

{
    "name": "vscode-restclient",
    "owner": "Huachao"
}


---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)))
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (header
      name: (name)
      value: (value))
    (graphql_body
      (identifier))
    (json_body)))



===================
External body file
===================

POST https://example.com/api/v1/users/new
Content-Type: application/json

< ./user.json

---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier))
      (path
        (identifier)
        (identifier)
        (identifier)
        (identifier)))
    (header
      name: (name)
      value: (value))
    (external_body
      file_path: (path))))


===========
Form data
===========

POST http://localhost:1234/foo

field1=value1

field2=value2&field3=value3

field4=value4&
field5=value5

---

(document
  (request
    (method)
    (target_url
      (scheme)
      (host
        (identifier)
        (port))
      (path
        (identifier)))
    (form_data
      name: (identifier)
      value: (value))
    (form_data
      name: (identifier)
      value: (value)
      name: (identifier)
      value: (value))
    (form_data
      name: (identifier)
      value: (value)
      name: (identifier)
      value: (value))))
